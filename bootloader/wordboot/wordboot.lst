
wordboot.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00007edc  00000350  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000002dc  00007c00  00007c00  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .stab         00000e70  00000000  00000000  00000350  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000d4a  00000000  00000000  000011c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .comment      00000011  00000000  00000000  00001f0a  2**0
                  CONTENTS, READONLY

Disassembly of section .text:

00007c00 <main>:
    7c00:	1f 92       	push	r1
    7c02:	cd b7       	in	r28, 0x3d	; 61
    7c04:	de b7       	in	r29, 0x3e	; 62
    7c06:	f8 94       	cli
    7c08:	11 24       	eor	r1, r1
    7c0a:	84 b7       	in	r24, 0x34	; 52
    7c0c:	14 be       	out	0x34, r1	; 52
    7c0e:	83 fd       	sbrc	r24, 3
    7c10:	43 d1       	rcall	.+646    	; 0x7e98 <appStart>
    7c12:	85 e0       	ldi	r24, 0x05	; 5
    7c14:	80 93 81 00 	sts	0x0081, r24
    7c18:	88 e1       	ldi	r24, 0x18	; 24
    7c1a:	80 93 c1 00 	sts	0x00C1, r24
    7c1e:	86 e0       	ldi	r24, 0x06	; 6
    7c20:	80 93 c2 00 	sts	0x00C2, r24
    7c24:	83 e3       	ldi	r24, 0x33	; 51
    7c26:	90 e0       	ldi	r25, 0x00	; 0
    7c28:	90 93 c5 00 	sts	0x00C5, r25
    7c2c:	80 93 c4 00 	sts	0x00C4, r24
    7c30:	2e e0       	ldi	r18, 0x0E	; 14
    7c32:	88 e1       	ldi	r24, 0x18	; 24
    7c34:	90 e0       	ldi	r25, 0x00	; 0
    7c36:	0f b6       	in	r0, 0x3f	; 63
    7c38:	f8 94       	cli
    7c3a:	a8 95       	wdr
    7c3c:	80 93 60 00 	sts	0x0060, r24
    7c40:	0f be       	out	0x3f, r0	; 63
    7c42:	20 93 60 00 	sts	0x0060, r18
    7c46:	14 bc       	out	0x24, r1	; 36
    7c48:	10 92 b0 00 	sts	0x00B0, r1
    7c4c:	81 e0       	ldi	r24, 0x01	; 1
    7c4e:	84 b9       	out	0x04, r24	; 4
    7c50:	85 b9       	out	0x05, r24	; 5
    7c52:	8c e0       	ldi	r24, 0x0C	; 12
    7c54:	87 b9       	out	0x07, r24	; 7
    7c56:	88 b9       	out	0x08, r24	; 8
    7c58:	80 e8       	ldi	r24, 0x80	; 128
    7c5a:	8a b9       	out	0x0a, r24	; 10
    7c5c:	8b b9       	out	0x0b, r24	; 11
    7c5e:	8a b1       	in	r24, 0x0a	; 10
    7c60:	88 66       	ori	r24, 0x68	; 104
    7c62:	8a b9       	out	0x0a, r24	; 10
    7c64:	84 b1       	in	r24, 0x04	; 4
    7c66:	8c 62       	ori	r24, 0x2C	; 44
    7c68:	84 b9       	out	0x04, r24	; 4
    7c6a:	2a 9a       	sbi	0x05, 2	; 5
    7c6c:	88 e5       	ldi	r24, 0x58	; 88
    7c6e:	8c bd       	out	0x2c, r24	; 44
    7c70:	83 e0       	ldi	r24, 0x03	; 3
    7c72:	1e bc       	out	0x2e, r1	; 46
    7c74:	0d b4       	in	r0, 0x2d	; 45
    7c76:	07 fe       	sbrs	r0, 7
    7c78:	fd cf       	rjmp	.-6      	; 0x7c74 <main+0x74>
    7c7a:	81 50       	subi	r24, 0x01	; 1
    7c7c:	d1 f7       	brne	.-12     	; 0x7c72 <main+0x72>
    7c7e:	2a 98       	cbi	0x05, 2	; 5
    7c80:	2a 9a       	sbi	0x05, 2	; 5
    7c82:	86 e0       	ldi	r24, 0x06	; 6
    7c84:	28 e1       	ldi	r18, 0x18	; 24
    7c86:	3e ef       	ldi	r19, 0xFE	; 254
    7c88:	41 e0       	ldi	r20, 0x01	; 1
    7c8a:	98 e6       	ldi	r25, 0x68	; 104
    7c8c:	30 93 85 00 	sts	0x0085, r19
    7c90:	20 93 84 00 	sts	0x0084, r18
    7c94:	46 bb       	out	0x16, r20	; 22
    7c96:	b0 9b       	sbis	0x16, 0	; 22
    7c98:	fe cf       	rjmp	.-4      	; 0x7c96 <main+0x96>
    7c9a:	99 b9       	out	0x09, r25	; 9
    7c9c:	a8 95       	wdr
    7c9e:	81 50       	subi	r24, 0x01	; 1
    7ca0:	a9 f7       	brne	.-22     	; 0x7c8c <main+0x8c>
    7ca2:	21 2c       	mov	r2, r1
    7ca4:	31 2c       	mov	r3, r1
    7ca6:	58 e1       	ldi	r21, 0x18	; 24
    7ca8:	a5 2e       	mov	r10, r21
    7caa:	b1 2c       	mov	r11, r1
    7cac:	68 e0       	ldi	r22, 0x08	; 8
    7cae:	96 2e       	mov	r9, r22
    7cb0:	73 e0       	ldi	r23, 0x03	; 3
    7cb2:	87 2e       	mov	r8, r23
    7cb4:	77 24       	eor	r7, r7
    7cb6:	73 94       	inc	r7
    7cb8:	e5 e0       	ldi	r30, 0x05	; 5
    7cba:	6e 2e       	mov	r6, r30
    7cbc:	f1 e1       	ldi	r31, 0x11	; 17
    7cbe:	5f 2e       	mov	r5, r31
    7cc0:	c3 d0       	rcall	.+390    	; 0x7e48 <getch>
    7cc2:	81 34       	cpi	r24, 0x41	; 65
    7cc4:	69 f4       	brne	.+26     	; 0x7ce0 <main+0xe0>
    7cc6:	c0 d0       	rcall	.+384    	; 0x7e48 <getch>
    7cc8:	89 83       	std	Y+1, r24	; 0x01
    7cca:	ce d0       	rcall	.+412    	; 0x7e68 <verifySpace>
    7ccc:	89 81       	ldd	r24, Y+1	; 0x01
    7cce:	82 38       	cpi	r24, 0x82	; 130
    7cd0:	f9 f0       	breq	.+62     	; 0x7d10 <main+0x110>
    7cd2:	81 38       	cpi	r24, 0x81	; 129
    7cd4:	11 f4       	brne	.+4      	; 0x7cda <main+0xda>
    7cd6:	86 e0       	ldi	r24, 0x06	; 6
    7cd8:	01 c0       	rjmp	.+2      	; 0x7cdc <main+0xdc>
    7cda:	83 e0       	ldi	r24, 0x03	; 3
    7cdc:	ae d0       	rcall	.+348    	; 0x7e3a <putch>
    7cde:	aa c0       	rjmp	.+340    	; 0x7e34 <main+0x234>
    7ce0:	82 34       	cpi	r24, 0x42	; 66
    7ce2:	11 f4       	brne	.+4      	; 0x7ce8 <main+0xe8>
    7ce4:	84 e1       	ldi	r24, 0x14	; 20
    7ce6:	03 c0       	rjmp	.+6      	; 0x7cee <main+0xee>
    7ce8:	85 34       	cpi	r24, 0x45	; 69
    7cea:	19 f4       	brne	.+6      	; 0x7cf2 <main+0xf2>
    7cec:	85 e0       	ldi	r24, 0x05	; 5
    7cee:	cd d0       	rcall	.+410    	; 0x7e8a <getNch>
    7cf0:	a1 c0       	rjmp	.+322    	; 0x7e34 <main+0x234>
    7cf2:	85 35       	cpi	r24, 0x55	; 85
    7cf4:	49 f4       	brne	.+18     	; 0x7d08 <main+0x108>
    7cf6:	a8 d0       	rcall	.+336    	; 0x7e48 <getch>
    7cf8:	18 2f       	mov	r17, r24
    7cfa:	a6 d0       	rcall	.+332    	; 0x7e48 <getch>
    7cfc:	21 2e       	mov	r2, r17
    7cfe:	31 2c       	mov	r3, r1
    7d00:	38 2a       	or	r3, r24
    7d02:	22 0c       	add	r2, r2
    7d04:	33 1c       	adc	r3, r3
    7d06:	95 c0       	rjmp	.+298    	; 0x7e32 <main+0x232>
    7d08:	86 35       	cpi	r24, 0x56	; 86
    7d0a:	21 f4       	brne	.+8      	; 0x7d14 <main+0x114>
    7d0c:	84 e0       	ldi	r24, 0x04	; 4
    7d0e:	bd d0       	rcall	.+378    	; 0x7e8a <getNch>
    7d10:	80 e0       	ldi	r24, 0x00	; 0
    7d12:	e4 cf       	rjmp	.-56     	; 0x7cdc <main+0xdc>
    7d14:	84 36       	cpi	r24, 0x64	; 100
    7d16:	09 f0       	breq	.+2      	; 0x7d1a <main+0x11a>
    7d18:	54 c0       	rjmp	.+168    	; 0x7dc2 <main+0x1c2>
    7d1a:	96 d0       	rcall	.+300    	; 0x7e48 <getch>
    7d1c:	08 2f       	mov	r16, r24
    7d1e:	10 e0       	ldi	r17, 0x00	; 0
    7d20:	10 2f       	mov	r17, r16
    7d22:	00 27       	eor	r16, r16
    7d24:	91 d0       	rcall	.+290    	; 0x7e48 <getch>
    7d26:	08 2b       	or	r16, r24
    7d28:	8f d0       	rcall	.+286    	; 0x7e48 <getch>
    7d2a:	48 2e       	mov	r4, r24
    7d2c:	68 01       	movw	r12, r16
    7d2e:	e1 2c       	mov	r14, r1
    7d30:	ff 24       	eor	r15, r15
    7d32:	f3 94       	inc	r15
    7d34:	89 d0       	rcall	.+274    	; 0x7e48 <getch>
    7d36:	f7 01       	movw	r30, r14
    7d38:	81 93       	st	Z+, r24
    7d3a:	7f 01       	movw	r14, r30
    7d3c:	f1 e0       	ldi	r31, 0x01	; 1
    7d3e:	cf 1a       	sub	r12, r31
    7d40:	d1 08       	sbc	r13, r1
    7d42:	c1 f7       	brne	.-16     	; 0x7d34 <main+0x134>
    7d44:	91 d0       	rcall	.+290    	; 0x7e68 <verifySpace>
    7d46:	85 e4       	ldi	r24, 0x45	; 69
    7d48:	48 12       	cpse	r4, r24
    7d4a:	12 c0       	rjmp	.+36     	; 0x7d70 <main+0x170>
    7d4c:	13 95       	inc	r17
    7d4e:	61 01       	movw	r12, r2
    7d50:	e1 2c       	mov	r14, r1
    7d52:	ff 24       	eor	r15, r15
    7d54:	f3 94       	inc	r15
    7d56:	e0 16       	cp	r14, r16
    7d58:	f1 06       	cpc	r15, r17
    7d5a:	09 f4       	brne	.+2      	; 0x7d5e <main+0x15e>
    7d5c:	6b c0       	rjmp	.+214    	; 0x7e34 <main+0x234>
    7d5e:	f7 01       	movw	r30, r14
    7d60:	61 91       	ld	r22, Z+
    7d62:	7f 01       	movw	r14, r30
    7d64:	c6 01       	movw	r24, r12
    7d66:	ac d0       	rcall	.+344    	; 0x7ec0 <__eewr_byte_m328p>
    7d68:	ff ef       	ldi	r31, 0xFF	; 255
    7d6a:	cf 1a       	sub	r12, r31
    7d6c:	df 0a       	sbc	r13, r31
    7d6e:	f3 cf       	rjmp	.-26     	; 0x7d56 <main+0x156>
    7d70:	f1 01       	movw	r30, r2
    7d72:	80 92 57 00 	sts	0x0057, r8
    7d76:	e8 95       	spm
    7d78:	07 b6       	in	r0, 0x37	; 55
    7d7a:	00 fc       	sbrc	r0, 0
    7d7c:	fd cf       	rjmp	.-6      	; 0x7d78 <main+0x178>
    7d7e:	80 e0       	ldi	r24, 0x00	; 0
    7d80:	90 e0       	ldi	r25, 0x00	; 0
    7d82:	fc 01       	movw	r30, r24
    7d84:	f3 95       	inc	r31
    7d86:	20 81       	ld	r18, Z
    7d88:	fc 01       	movw	r30, r24
    7d8a:	e2 0d       	add	r30, r2
    7d8c:	f3 1d       	adc	r31, r3
    7d8e:	dc 01       	movw	r26, r24
    7d90:	af 5f       	subi	r26, 0xFF	; 255
    7d92:	be 4f       	sbci	r27, 0xFE	; 254
    7d94:	4c 91       	ld	r20, X
    7d96:	30 e0       	ldi	r19, 0x00	; 0
    7d98:	34 2b       	or	r19, r20
    7d9a:	09 01       	movw	r0, r18
    7d9c:	70 92 57 00 	sts	0x0057, r7
    7da0:	e8 95       	spm
    7da2:	11 24       	eor	r1, r1
    7da4:	02 96       	adiw	r24, 0x02	; 2
    7da6:	08 17       	cp	r16, r24
    7da8:	19 07       	cpc	r17, r25
    7daa:	59 f7       	brne	.-42     	; 0x7d82 <main+0x182>
    7dac:	f1 01       	movw	r30, r2
    7dae:	60 92 57 00 	sts	0x0057, r6
    7db2:	e8 95       	spm
    7db4:	07 b6       	in	r0, 0x37	; 55
    7db6:	00 fc       	sbrc	r0, 0
    7db8:	fd cf       	rjmp	.-6      	; 0x7db4 <main+0x1b4>
    7dba:	50 92 57 00 	sts	0x0057, r5
    7dbe:	e8 95       	spm
    7dc0:	39 c0       	rjmp	.+114    	; 0x7e34 <main+0x234>
    7dc2:	84 37       	cpi	r24, 0x74	; 116
    7dc4:	19 f5       	brne	.+70     	; 0x7e0c <main+0x20c>
    7dc6:	40 d0       	rcall	.+128    	; 0x7e48 <getch>
    7dc8:	e8 2e       	mov	r14, r24
    7dca:	f1 2c       	mov	r15, r1
    7dcc:	fe 2c       	mov	r15, r14
    7dce:	ee 24       	eor	r14, r14
    7dd0:	3b d0       	rcall	.+118    	; 0x7e48 <getch>
    7dd2:	e8 2a       	or	r14, r24
    7dd4:	39 d0       	rcall	.+114    	; 0x7e48 <getch>
    7dd6:	89 83       	std	Y+1, r24	; 0x01
    7dd8:	47 d0       	rcall	.+142    	; 0x7e68 <verifySpace>
    7dda:	89 81       	ldd	r24, Y+1	; 0x01
    7ddc:	81 01       	movw	r16, r2
    7dde:	85 34       	cpi	r24, 0x45	; 69
    7de0:	61 f4       	brne	.+24     	; 0x7dfa <main+0x1fa>
    7de2:	c8 01       	movw	r24, r16
    7de4:	65 d0       	rcall	.+202    	; 0x7eb0 <__eerd_byte_m328p>
    7de6:	29 d0       	rcall	.+82     	; 0x7e3a <putch>
    7de8:	f1 e0       	ldi	r31, 0x01	; 1
    7dea:	ef 1a       	sub	r14, r31
    7dec:	f1 08       	sbc	r15, r1
    7dee:	0f 5f       	subi	r16, 0xFF	; 255
    7df0:	1f 4f       	sbci	r17, 0xFF	; 255
    7df2:	e1 14       	cp	r14, r1
    7df4:	f1 04       	cpc	r15, r1
    7df6:	a9 f7       	brne	.-22     	; 0x7de2 <main+0x1e2>
    7df8:	1d c0       	rjmp	.+58     	; 0x7e34 <main+0x234>
    7dfa:	f8 01       	movw	r30, r16
    7dfc:	85 91       	lpm	r24, Z+
    7dfe:	8f 01       	movw	r16, r30
    7e00:	1c d0       	rcall	.+56     	; 0x7e3a <putch>
    7e02:	f1 e0       	ldi	r31, 0x01	; 1
    7e04:	ef 1a       	sub	r14, r31
    7e06:	f1 08       	sbc	r15, r1
    7e08:	c1 f7       	brne	.-16     	; 0x7dfa <main+0x1fa>
    7e0a:	14 c0       	rjmp	.+40     	; 0x7e34 <main+0x234>
    7e0c:	85 37       	cpi	r24, 0x75	; 117
    7e0e:	39 f4       	brne	.+14     	; 0x7e1e <main+0x21e>
    7e10:	2b d0       	rcall	.+86     	; 0x7e68 <verifySpace>
    7e12:	8e e1       	ldi	r24, 0x1E	; 30
    7e14:	12 d0       	rcall	.+36     	; 0x7e3a <putch>
    7e16:	85 e9       	ldi	r24, 0x95	; 149
    7e18:	10 d0       	rcall	.+32     	; 0x7e3a <putch>
    7e1a:	8f e0       	ldi	r24, 0x0F	; 15
    7e1c:	5f cf       	rjmp	.-322    	; 0x7cdc <main+0xdc>
    7e1e:	81 35       	cpi	r24, 0x51	; 81
    7e20:	41 f4       	brne	.+16     	; 0x7e32 <main+0x232>
    7e22:	0f b6       	in	r0, 0x3f	; 63
    7e24:	f8 94       	cli
    7e26:	a8 95       	wdr
    7e28:	a0 92 60 00 	sts	0x0060, r10
    7e2c:	0f be       	out	0x3f, r0	; 63
    7e2e:	90 92 60 00 	sts	0x0060, r9
    7e32:	1a d0       	rcall	.+52     	; 0x7e68 <verifySpace>
    7e34:	80 e1       	ldi	r24, 0x10	; 16
    7e36:	01 d0       	rcall	.+2      	; 0x7e3a <putch>
    7e38:	43 cf       	rjmp	.-378    	; 0x7cc0 <main+0xc0>

00007e3a <putch>:
  }
}

void putch(char ch) {

  while (!(UCSR0A & _BV(UDRE0)));
    7e3a:	90 91 c0 00 	lds	r25, 0x00C0
    7e3e:	95 ff       	sbrs	r25, 5
    7e40:	fc cf       	rjmp	.-8      	; 0x7e3a <putch>
  UDR0 = ch;
    7e42:	80 93 c6 00 	sts	0x00C6, r24
    7e46:	08 95       	ret

00007e48 <getch>:

uint8_t getch(void) {
  uint8_t ch;

#ifdef LED_DATA_FLASH
  PIND = _BV(PD6) | _BV(PD5) | _BV(PD3);
    7e48:	88 e6       	ldi	r24, 0x68	; 104
    7e4a:	89 b9       	out	0x09, r24	; 9
#endif

  while(!(UCSR0A & _BV(RXC0)))
    7e4c:	80 91 c0 00 	lds	r24, 0x00C0
    7e50:	87 ff       	sbrs	r24, 7
    7e52:	fc cf       	rjmp	.-8      	; 0x7e4c <getch+0x4>
    ;
  if (!(UCSR0A & _BV(FE0))) {
    7e54:	80 91 c0 00 	lds	r24, 0x00C0
    7e58:	84 fd       	sbrc	r24, 4
    7e5a:	01 c0       	rjmp	.+2      	; 0x7e5e <getch+0x16>
       * expects to be talking to the application, and DON'T reset the
       * watchdog.  This should cause the bootloader to abort and run
       * the application "soon", if it keeps happening.  (Note that we
       * don't care that an invalid char is returned...)
       */
    wdt_reset();
    7e5c:	a8 95       	wdr
  }
  
  ch = UDR0;
    7e5e:	80 91 c6 00 	lds	r24, 0x00C6

#ifdef LED_DATA_FLASH
  PIND = _BV(PD6) | _BV(PD5) | _BV(PD3);
    7e62:	98 e6       	ldi	r25, 0x68	; 104
    7e64:	99 b9       	out	0x09, r25	; 9
#endif

  return ch;
}
    7e66:	08 95       	ret

00007e68 <verifySpace>:
  do getch(); while (--count);
  verifySpace();
}

void verifySpace() {
  if (getch() != CRC_EOP) {
    7e68:	ef df       	rcall	.-34     	; 0x7e48 <getch>
    7e6a:	80 32       	cpi	r24, 0x20	; 32
    7e6c:	61 f0       	breq	.+24     	; 0x7e86 <verifySpace+0x1e>
    7e6e:	28 e0       	ldi	r18, 0x08	; 8
    wdt_enable(WDTO_15MS);    // shorten WD timeout
    7e70:	88 e1       	ldi	r24, 0x18	; 24
    7e72:	90 e0       	ldi	r25, 0x00	; 0
    7e74:	0f b6       	in	r0, 0x3f	; 63
    7e76:	f8 94       	cli
    7e78:	a8 95       	wdr
    7e7a:	80 93 60 00 	sts	0x0060, r24
    7e7e:	0f be       	out	0x3f, r0	; 63
    7e80:	20 93 60 00 	sts	0x0060, r18
    7e84:	ff cf       	rjmp	.-2      	; 0x7e84 <verifySpace+0x1c>
    while (1)			      // and busy-loop so that WD causes
      ;				      //  a reset and app start.
    7e86:	84 e1       	ldi	r24, 0x14	; 20
  }
  putch(STK_INSYNC);
    7e88:	d8 cf       	rjmp	.-80     	; 0x7e3a <putch>

00007e8a <getNch>:
#endif

  return ch;
}

void getNch(uint8_t count) {
    7e8a:	cf 93       	push	r28
    7e8c:	c8 2f       	mov	r28, r24
  do getch(); while (--count);
    7e8e:	dc df       	rcall	.-72     	; 0x7e48 <getch>
    7e90:	c1 50       	subi	r28, 0x01	; 1
    7e92:	e9 f7       	brne	.-6      	; 0x7e8e <getNch+0x4>
    7e94:	cf 91       	pop	r28
  verifySpace();
}
    7e96:	e8 cf       	rjmp	.-48     	; 0x7e68 <verifySpace>

00007e98 <appStart>:

void appStart(uint8_t rstFlags) {
  // save the reset flags in the designated register
  //  This can be saved in a main program by putting code in .init0 (which
  //  executes before normal c init code) to save R2 to a global variable.
  __asm__ __volatile__ ("mov r2, %0\n" :: "r" (rstFlags));
    7e98:	28 2e       	mov	r2, r24

  wdt_disable();
    7e9a:	88 e1       	ldi	r24, 0x18	; 24
    7e9c:	0f b6       	in	r0, 0x3f	; 63
    7e9e:	f8 94       	cli
    7ea0:	80 93 60 00 	sts	0x0060, r24
    7ea4:	10 92 60 00 	sts	0x0060, r1
    7ea8:	0f be       	out	0x3f, r0	; 63
  __asm__ __volatile__ (
    7eaa:	ee 27       	eor	r30, r30
    7eac:	ff 27       	eor	r31, r31
    7eae:	09 94       	ijmp

00007eb0 <__eerd_byte_m328p>:
    7eb0:	f9 99       	sbic	0x1f, 1	; 31
    7eb2:	fe cf       	rjmp	.-4      	; 0x7eb0 <__eerd_byte_m328p>
    7eb4:	92 bd       	out	0x22, r25	; 34
    7eb6:	81 bd       	out	0x21, r24	; 33
    7eb8:	f8 9a       	sbi	0x1f, 0	; 31
    7eba:	99 27       	eor	r25, r25
    7ebc:	80 b5       	in	r24, 0x20	; 32
    7ebe:	08 95       	ret

00007ec0 <__eewr_byte_m328p>:
    7ec0:	26 2f       	mov	r18, r22

00007ec2 <__eewr_r18_m328p>:
    7ec2:	f9 99       	sbic	0x1f, 1	; 31
    7ec4:	fe cf       	rjmp	.-4      	; 0x7ec2 <__eewr_r18_m328p>
    7ec6:	1f ba       	out	0x1f, r1	; 31
    7ec8:	92 bd       	out	0x22, r25	; 34
    7eca:	81 bd       	out	0x21, r24	; 33
    7ecc:	20 bd       	out	0x20, r18	; 32
    7ece:	0f b6       	in	r0, 0x3f	; 63
    7ed0:	f8 94       	cli
    7ed2:	fa 9a       	sbi	0x1f, 2	; 31
    7ed4:	f9 9a       	sbi	0x1f, 1	; 31
    7ed6:	0f be       	out	0x3f, r0	; 63
    7ed8:	01 96       	adiw	r24, 0x01	; 1
    7eda:	08 95       	ret
